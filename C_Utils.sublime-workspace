{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"MU_Cond",
				"MU_COND_MUTEX_UNLOCK"
			],
			[
				"MU_COND",
				"MU_COND_MUTEX_LOCK"
			],
			[
				"MU_CONDMU",
				"MU_COND_MUTEX_LOCK"
			],
			[
				"bsock",
				"bsock_unbind"
			],
			[
				"MU_RE",
				"MU_TEMP_FAILURE_RETRY"
			],
			[
				"MU_Co",
				"MU_COND_MUTEX_UNLOCK"
			],
			[
				"MU_COND_MU",
				"MU_COND_MUTEX_LOCK"
			],
			[
				"handl",
				"handle_connection"
			],
			[
				"arg",
				"arg_size"
			],
			[
				"SU_S",
				"SU_String_starts_with"
			],
			[
				"SU_String_",
				"SU_String_substring"
			],
			[
				"s",
				"s"
			],
			[
				"logger",
				"logger"
			],
			[
				"MU",
				"MU_TEST_H"
			],
			[
				"start",
				"start_str"
			],
			[
				"start_",
				"start_offset"
			],
			[
				"char",
				"char_equal"
			],
			[
				"curr",
				"curr_char"
			],
			[
				"SU_STr",
				"SU_String_equal"
			],
			[
				"substr",
				"substring"
			],
			[
				"buf",
				"buf_size"
			],
			[
				"string",
				"string_ptr"
			],
			[
				"to",
				"tolower"
			],
			[
				"find",
				"find_len"
			],
			[
				"split",
				"split_strings"
			],
			[
				"ignore",
				"ignore_case"
			],
			[
				"DS_Atomic_",
				"DS_Atomic_Node_create"
			],
			[
				"DS",
				"DS_Stack_t"
			],
			[
				"DS_Stack",
				"DS_Stack_t"
			],
			[
				"DS_A",
				"DS_Atomic_Node_t"
			],
			[
				"DS_At",
				"DS_Atomic_Node_create"
			],
			[
				"atomic",
				"atomic_compare_exchange_strong"
			],
			[
				"atomic_compare",
				"atomic_compare_exchange_strong"
			],
			[
				"atomic_",
				"atomic_compare_exchange_weak"
			],
			[
				"DS_Ato",
				"DS_Atomic_Node_t"
			],
			[
				"DS_Atom",
				"DS_Atomic_Node_create"
			],
			[
				"DS_Nod",
				"DS_Atomic_Node_t"
			],
			[
				"MU_L",
				"MU_LOG_ASSERT"
			],
			[
				"DS_Queue",
				"DS_Queue_t"
			],
			[
				"DS_",
				"DS_Queue_t"
			],
			[
				"NU_HTTP_",
				"NU_HTTP_Version_e"
			],
			[
				"ret",
				"retval"
			],
			[
				"event",
				"event_signal"
			],
			[
				"thread",
				"thread_id"
			],
			[
				"TP_Pool_",
				"TP_Pool_resume"
			],
			[
				"Des",
				"Destroy_Worker"
			],
			[
				"sleep",
				"sleep_after"
			],
			[
				"max_",
				"max_num"
			],
			[
				"not",
				"not_empty"
			],
			[
				"pthread_cond",
				"pthread_cond_broadcast"
			],
			[
				"atomic_fe",
				"atomic_fetch_add"
			],
			[
				"pthread",
				"pthread_cond_timedwait"
			],
			[
				"max",
				"max_size"
			],
			[
				"DS_PB",
				"DS_PBQueue_t"
			],
			[
				"not_empty",
				"not_empty_init"
			],
			[
				"Add_as_",
				"Add_As_Tail"
			],
			[
				"Dest",
				"Destroy_Task"
			],
			[
				"tp",
				"tp"
			],
			[
				"result",
				"result_event_name"
			],
			[
				"finis",
				"finished_event_name"
			],
			[
				"pause",
				"pause_event_name"
			],
			[
				"worker",
				"worker_threads"
			],
			[
				"pool",
				"pool_size"
			],
			[
				"MU_EVE",
				"MU_EVENT_MAX_LEN"
			],
			[
				"even",
				"event_name_len"
			],
			[
				"get",
				"Get_Self"
			],
			[
				"seconds",
				"seconds_to_pause"
			],
			[
				"cond",
				"cond_initialized"
			],
			[
				"lock",
				"lock_initialized"
			],
			[
				"MU_E",
				"MU_Event_t"
			],
			[
				"MU_even",
				"MU_Event_t"
			],
			[
				"resume",
				"resume"
			],
			[
				"NU_Bound",
				"NU_Bound_Socket_unbind"
			],
			[
				"recv",
				"recv_flags"
			],
			[
				"MU_Con",
				"MU_COND_RWLOCK_RDLOCK"
			],
			[
				"send",
				"send_flags"
			],
			[
				"NU_Respo",
				"NU_Response_t"
			],
			[
				"NU_Request",
				"NU_Request_t"
			],
			[
				"request",
				"request"
			],
			[
				"header",
				"header_str"
			],
			[
				"deli",
				"delimiter"
			],
			[
				"first",
				"first_line"
			],
			[
				"val",
				"value_size"
			],
			[
				"field",
				"field_size"
			],
			[
				"delim",
				"delim_size"
			],
			[
				"NU_HEader",
				"NU_Header_create"
			],
			[
				"NU_Header",
				"NU_Header_t"
			],
			[
				"NU_He",
				"NU_Header_t"
			],
			[
				"arr",
				"arr_size"
			],
			[
				"MU_COND_",
				"MU_COND_RWLOCK_UNLOCK"
			],
			[
				"conn",
				"conn_pool_size"
			],
			[
				"MU_A",
				"MU_ARG_CHECK"
			],
			[
				"BUF",
				"buffer_size"
			],
			[
				"MU_",
				"MU_ARG_CHECK"
			],
			[
				"NU_Server",
				"NU_Server_File_Downloader"
			],
			[
				"value",
				"value_retrieved"
			],
			[
				"MU_Cond_rw",
				"MU_Cond_rwlock_unlock"
			],
			[
				"MU_Cond_rwlock",
				"MU_Cond_rwlock_unlock"
			],
			[
				"MU_Logger_Format",
				"MU_Logger_Format_Info_t"
			],
			[
				"MU_Arg",
				"MU_Arg_evaluate_boolean"
			],
			[
				"default",
				"default_f"
			],
			[
				"er",
				"error_f"
			],
			[
				"custom",
				"custom_level"
			],
			[
				"MU_Lo",
				"MU_Logger_Format_Info_t"
			],
			[
				"should",
				"should_copy"
			],
			[
				"MU_Logger",
				"MU_Logger_get_format"
			],
			[
				"MU_Logger_",
				"MU_Logger_Format_Tokens"
			],
			[
				"lvl",
				"lvl_fn"
			],
			[
				"MU_Logger_Form",
				"MU_Logger_Format_Info_t"
			],
			[
				"formatter",
				"formatter_orig_len"
			],
			[
				"token",
				"token_size"
			],
			[
				"__F",
				"__FUNCTION__"
			],
			[
				"MU_ARG",
				"MU_ARG_STRINGIFY"
			],
			[
				"str",
				"string_ptr"
			],
			[
				"MU_ARG_CH",
				"MU_ARG_CHECK_1"
			],
			[
				"__",
				"__VA_ARGS__"
			],
			[
				"crea",
				"create_bucket"
			],
			[
				"DS_Hash",
				"DS_Hash_Map_Test"
			],
			[
				"DS_Has",
				"DS_Hash_Map_destroy"
			],
			[
				"DS_hash_ma",
				"DS_Hash_Map_contains"
			],
			[
				"DS_hash_",
				"DS_Hash_Map_get"
			],
			[
				"DS_Hash_",
				"DS_Hash_Map_remove"
			],
			[
				"get_buc",
				"get_bucket_index"
			],
			[
				"get_value",
				"get_value_from_key"
			],
			[
				"clear",
				"clear_map"
			],
			[
				"DS_H",
				"DS_Hash_Map_t"
			],
			[
				"return",
				"return"
			],
			[
				"bucket",
				"bucket_is_valid"
			]
		]
	},
	"buffers":
	[
		{
			"file": "Net_Utils/Tests/NU_Server_Test_File_Downloader.c",
			"settings":
			{
				"buffer_size": 3175,
				"line_ending": "Unix"
			}
		},
		{
			"file": "Net_Utils/NU_Server.c",
			"settings":
			{
				"buffer_size": 14982,
				"line_ending": "Unix"
			}
		},
		{
			"file": "Net_Utils/NU_Client.h",
			"settings":
			{
				"buffer_size": 1302,
				"line_ending": "Unix"
			}
		},
		{
			"file": "Net_Utils/NU_Connection.c",
			"settings":
			{
				"buffer_size": 14965,
				"line_ending": "Unix"
			}
		},
		{
			"file": "Net_Utils/NU_Connection.h",
			"settings":
			{
				"buffer_size": 2510,
				"line_ending": "Unix"
			}
		},
		{
			"file": "Net_Utils/NU_Helper.h",
			"settings":
			{
				"buffer_size": 734,
				"line_ending": "Unix"
			}
		},
		{
			"file": "Net_Utils/NU_Server.h",
			"settings":
			{
				"buffer_size": 4053,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "Packages/Makefile/Make.sublime-build",
	"build_system_choices":
	[
		[
			[
				[
					"Packages/C++/C++ Single File.sublime-build",
					""
				],
				[
					"Packages/C++/C++ Single File.sublime-build",
					"Run"
				]
			],
			[
				"Packages/C++/C++ Single File.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/C++/C++ Single File.sublime-build",
					""
				],
				[
					"Packages/C++/C++ Single File.sublime-build",
					"Run"
				],
				[
					"Packages/Makefile/Make.sublime-build",
					""
				],
				[
					"Packages/Makefile/Make.sublime-build",
					"Clean"
				],
				[
					"Packages/User/Make_C.sublime-build",
					""
				]
			],
			[
				"Packages/Makefile/Make.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/C++/C++ Single File.sublime-build",
					""
				],
				[
					"Packages/C++/C++ Single File.sublime-build",
					"Run"
				],
				[
					"Packages/User/Make_C.sublime-build",
					""
				]
			],
			[
				"Packages/User/Make_C.sublime-build",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 58.0,
		"last_filter": "make depe",
		"selected_items":
		[
			[
				"make depe",
				"Makefile (C_Utils): make depend"
			],
			[
				"make clean",
				"Build With: Make - Clean"
			],
			[
				"make depend",
				"Makefile (C_Utils): make depend"
			],
			[
				"make",
				"Makefile (C_Utils): make all"
			],
			[
				"make ",
				"Makefile (C_Utils): make depend"
			],
			[
				"git push",
				"Git: Push"
			],
			[
				"git commit",
				"Git: Commit"
			],
			[
				"git add",
				"Git: Add..."
			],
			[
				"git commt",
				"Git: Commit"
			],
			[
				"git",
				"Git: Add..."
			],
			[
				"git status",
				"Git: Status"
			],
			[
				"make clea",
				"Build With: Make - Clean"
			],
			[
				"make cl",
				"Build With: Make - Clean"
			],
			[
				"pack",
				"Package Control: Install Package"
			],
			[
				"lint",
				"SublimeLinter: Toggle Linter"
			],
			[
				"package",
				"Package Control: Install Package"
			],
			[
				"Package",
				"Package Control: Remove Package"
			],
			[
				"Package Control: ",
				"Package Control: List Packages"
			],
			[
				"package ",
				"Package Control: Install Package"
			],
			[
				"Run",
				"Run"
			],
			[
				"run",
				"Run"
			],
			[
				"status",
				"Git: Status"
			],
			[
				"Make_C",
				"Build With: Make_C"
			],
			[
				"Package Control",
				"Package Control: List Packages"
			],
			[
				"Package Control: C",
				"Package Control: Add Channel"
			],
			[
				"Pack",
				"Preferences: Browse Packages"
			]
		],
		"width": 416.0
	},
	"console":
	{
		"height": 126.0,
		"history":
		[
			"asda",
			"view.run_command('EventDump')",
			"view.run_command('my_app')",
			"view.run_command('myapp')",
			"view.run_command('my_app')",
			"view.run_command('myapp')",
			"view.run_command('example')",
			"import urllib.request,os,hashlib; h = 'eb2297e1a458f27d836c04bb0cbaf282' + 'd0e7a3098092775ccb37ca9d6b2e4b7d'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by) "
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/C/Users/theif519/Documents/GitHub/C_Utils",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Misc_Utils",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Net_Utils",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Net_Utils/Logs",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Net_Utils/Misc",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Net_Utils/Tests",
		"/C/Users/theif519/Documents/GitHub/C_Utils/String_Utils",
		"/C/Users/theif519/Documents/GitHub/C_Utils/String_Utils/Logs",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Thread_Pool",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Thread_Pool/Logs"
	],
	"file_history":
	[
		"/C/Users/theif519/Documents/GitHub/C_Utils/Net_Utils/NU_Helper.c",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Net_Utils/Misc/NU_Server_File_Downloader.mk",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Misc_Utils/MU_Logger.c",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Thread_Pool/TP_Pool.c",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Thread_Pool/Logs/TP_Pool.log",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Net_Utils/Logs/NU_Server.log",
		"/C/Users/theif519/Documents/theif519.html",
		"/C/Users/theif519/Documents/GitHub/C_Utils/String_Utils/Tests/SU_String_Test.c",
		"/C/Users/theif519/Documents/GitHub/C_Utils/String_Utils/SU_String.h",
		"/C/Users/theif519/Documents/GitHub/C_Utils/String_Utils/SU_String.c",
		"/C/Users/theif519/Documents/GitHub/C_Utils/String_Utils/Logs/SU_String_Test.log",
		"/C/Users/theif519/Documents/GitHub/C_Utils/String_Utils/Logs/SU_String.log",
		"/C/Users/theif519/Documents/GitHub/C_Utils/README.md",
		"/C/Users/theif519/Documents/GitHub/C_Utils/C_Utils.sublime-project",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Misc_Utils/MU_Logger.h",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Misc_Utils/MU_Test.h",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Misc_Utils/MU_Arg_Check.c",
		"/C/Users/theif519/Documents/GitHub/C_Utils/String_Utils/Misc/SU_String_Test.mk",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Net_Utils/NU_Client.c",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Thread_Pool/TP_Pool.h",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Misc_Utils/MU_Arg_Check.h",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Data_Structures/DS_Queue.h",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Data_Structures/DS_Queue.c",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Data_Structures/DS_Stack.h",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Data_Structures/DS_Stack.c",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Misc_Utils/MU_Events.c",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Net_Utils/NU_HTTP.c",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Thread_Pool/Misc/TP_Pool_Test.mk",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Misc_Utils/MU_Events.h",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Thread_Pool/Test/TP_Pool_Test.c",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Thread_Pool/Logs/TP_Pool_Events.log",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Misc_Utils/MU_Flags.h",
		"/C/cygwin64/usr/include/sys/types.h",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Thread_Pool/Logs/TP_Pool_Test.log",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Data_Structures/Tests/DS_PBQueue_Test.c",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Data_Structures/DS_PBQueue.h",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Data_Structures/DS_PBQueue.c",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Data_Structures/Misc/DS_PBQueue_Test.mk",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Data_Structures/Logs/DS_PBQueue_Test.log",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Data_Structures/DS_Helpers.h",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Thread_Pool/Thread_Pool.h",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Thread_Pool/Thread_Pool.c",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Data_Structures/PBQueue.h",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Data_Structures/PBQueue.c",
		"/C/cygwin64/usr/include/sys/signal.h",
		"/C/cygwin64/usr/include/sys/tree.h",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Net_Utils/NU_Server.c",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Thread_Pool/Code/Thread_Pool.h",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Net_Utils/Tests/NU_Server_Test_File_Downloader.c",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Thread_Pool/Code/Thread_Pool.c",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Net_Utils/NU_Connection.h",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Data_Structures/Tests/DS_Hash_Map_Test.c",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Data_Structures/DS_Hash_Map.c",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Net_Utils/Tests/NU_Server_Test_Client_Chat.c",
		"/C/Users/theif519/Documents/GitHub/C_Utils/NU_Server.log",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Data_Structures/DS_Hash_Map_Test.c",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Data_Structures/Misc/DS_Hash_Map_Test.mk",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Net_Utils/NU_Connection.c",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Net_Utils/NU_Helper.h",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Net_Utils/NU_Server.h",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Net_Utils/NU_Client.h",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Net_Utils/NU_HTTP.h",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Net_Utils/Misc/NU_HTTP_Header_Test.mk",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Net_Utils/Tests/NU_HTTP_Header_Test.c",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Data_Structures/DS_Hash_Map.h",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Net_Utils/Misc/NU_Server_Telnet_Client_Chat.mk",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Misc_Utils/MU_Cond_Locks.h",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Misc_Utils/MU_Cond_Locks.c",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Net_Utils/Tests/NU_Client_Test_File_Downloader.c",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Net_Utils/Misc/NU_Server_Telnet_Client_Char.mk",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Misc_Utils/MU_Retry.h",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Data_Structures/Misc/DS_Hash_Map.mk",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Net_Utils/NU_Server_File_Downloader.mk",
		"/C/Users/theif519/Documents/GitHub/C_Utils/DS_Hash_Map_Test.log",
		"/C/Users/theif519/Documents/GitHub/C_Utils/DS_Hash_Map.log",
		"/C/Users/theif519/Documents/GitHub/C_Utils/DS_Hash_Map_Test.exe.stackdump",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Makefile",
		"/C/cygwin64/home/theif519/DrMemory-Linux-1.8.0-8/README",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Net_Utils/makefile",
		"/C/Users/theif519/Documents/GitHub/C_Utils/COMMIT_EDITMSG.COMMIT_EDITMSG",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Misc_Utils/COMMIT_EDITMSG.COMMIT_EDITMSG",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Data_Structures/Linked_List.c",
		"/C/Users/theif519/AppData/Roaming/Sublime Text 3/Packages/SublimeLinter-contrib-clang/README.md",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Data_Structures/DS_Hash_Map.sublime-project",
		"/C/Users/theif519/AppData/Roaming/Sublime Text 3/Packages/SublimeLinter/SublimeLinter.sublime-settings",
		"/C/Users/theif519/AppData/Roaming/Sublime Text 3/Packages/SublimeLinter/Default (Windows).sublime-keymap",
		"/C/Users/theif519/AppData/Roaming/Sublime Text 3/Packages/Prefixr/My_First_Plugin.py",
		"/C/Users/theif519/AppData/Roaming/Sublime Text 3/Packages/User/Default (Windows).sublime-keymap",
		"/C/Users/theif519/Documents/GitHub/C_Utils/make.sh",
		"/C/Users/theif519/AppData/Roaming/Sublime Text 3/Packages/User/C_Make.sublime-build",
		"/C/Users/theif519/AppData/Roaming/Sublime Text 3/Packages/User/C_Build.sublime-build",
		"/C/Users/theif519/AppData/Roaming/Sublime Text 3/Packages/User/Make_C.sublime-build",
		"/C/Users/theif519/AppData/Roaming/Sublime Text 3/Packages/User/MakeCommand.sublime-commands",
		"/C/Users/theif519/AppData/Roaming/Sublime Text 3/Packages/Git/Git.sublime-settings",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Data_Structures/Hash_Map/DS_Hash_Map_Test.c",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Data_Structures/Hash_Map/DS_Hash_Map.c",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Data_Structures/Hash_Map/DS_Hash_Map.h",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Misc_Utils/MU_Allocators.c",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Misc_Utils/MU_Allocators.h",
		"/C/Users/theif519/AppData/Local/Temp/Rar$DIa0.502/http.c",
		"/C/Users/theif519/AppData/Local/Temp/Rar$DRa0.099/kore/includes/http.h",
		"/C/Users/theif519/AppData/Local/Temp/Rar$DIa0.256/net.c",
		"/C/Users/theif519/AppData/Local/Temp/Rar$DIa0.956/timer.c",
		"/C/Users/theif519/AppData/Local/Temp/Rar$DIa0.097/worker.c",
		"/C/Users/theif519/AppData/Local/Temp/Rar$DIa0.922/zlib_dict.c",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Net_Utils/Ideas.md",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Net_Utils/NU_Server_Test_File_Downloader.c",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Misc_Utils/MU_Timer.c",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Misc_Utils/MU_Timer.h",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Misc_Utils/MU_Atomic.h",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Misc_Utils/Misc_Utils.c",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Misc_Utils/Misc_Utils.h",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Misc_Utils/MU_Helper.h",
		"/C/Users/theif519/Documents/GitHub/C_Utils/String_Utils/Code/String_Utils.c",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Development/Net_Utils/NU_Helper.h",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Development/Net_Utils/NU_Helper.c",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Development/Net_Utils/NU_Server.c",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Development/NU_Server_Log.txt",
		"/C/Program Files (x86)/Pithos/pithos.bat",
		"/C/Program Files (x86)/Pithos/pithos.txt",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Development/Net_Utils/NU_Server_Test.c",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Development/Net_Utils/NU_Server.h",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Development/Misc_Utils/Code/Misc_Utils.h",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Development/Net_Utils/Code/NU_Server.h",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Development/Net_Utils/Code/NU_Client.c",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Development/Net_Utils/Code/Net_Utils.h",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Development/Net_Utils/Code/NU_Server.c",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Development/Net_Utils/Code/NU_Client.h"
	],
	"find":
	{
		"height": 34.0
	},
	"find_in_files":
	{
		"height": 90.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"timed",
			"substring",
			"string",
			"substring",
			"string",
			"SU_String_t",
			"SU_String_t \\*",
			"SU_String_t  *",
			"U_String_t  *",
			"SU_String_t *",
			"SU_String_t \\*",
			"String_t",
			"String",
			"char \\*",
			"char *",
			"char \\*",
			"String_Utils",
			"is_selected",
			"{\n",
			"is_selected",
			"thread",
			"thread_t",
			"pid_t",
			"uint32_t",
			"MU_event_signal",
			"bounds",
			"pthread",
			"strerror",
			"pthread_mutex_t",
			"pthread_cond_t",
			"malloc",
			"}\n",
			"signal_event",
			"cond",
			"flag",
			"lock",
			"no_tasks",
			"bsock->is_bound",
			", logger",
			", MU_Logger_t \\*logger",
			"\\(logger",
			", MU_Logger_t \\*logger",
			", logger",
			"// Implement",
			"			\n",
			"\\\\n",
			"\\\\\"",
			"MU_Cond_rwlock_unlock",
			"MU_Cond_rwlock_wrlock",
			"MU_Cond_rwlock_rdlock",
			"MU_Cond_rwlock_destroy",
			"MU_Cond_rwlock_init",
			"MU_Cond_rwlock_unlock",
			"MU_Cond_rwlock_rdlock",
			"MU_Cond_rwlock_wrlock",
			"MU_Cond_rwlock_destroy",
			"MU_Cond_rwlock_wrlock",
			"MU_Cond_rwlock_rdlock",
			"MU_Cond_rwlock_unlock",
			"MU_Cond_rwlock_destroy",
			"MU_Cond_rwlock_wrlock",
			"MU_Cond_rwlock_rdlock",
			"(^\\\\r)\\\\n\"",
			"\\\\n\"",
			"\\\\\"",
			"MU_Cond_rwlock_de",
			"\".*->",
			"\"NU_Client_destroy->",
			"\".*->",
			" != NULL",
			"!= NULL",
			" != NULL",
			"!= NULL",
			"\\(\\(void \\*\\)0\\)",
			"((void *)0)",
			"'\\n\"",
			"'\\\\n\"",
			"\\\\n",
			"\\\\\"",
			"\"NU_.*->",
			"\".*->",
			"\"NU_Server_destroy->",
			"\".*->",
			"\\\\\"",
			"\\\\n\"",
			"\\\\\"",
			"\\\\n",
			"MU_TEMP_",
			"'",
			"\\\\n",
			"\\n",
			"\\\\n",
			"MU_logger_Log",
			"assertion",
			"__LINE__",
			"MU_ARG_EVAL\\(arg\\)",
			"!= false\\)",
			"arg, string_ptr",
			"_Bool",
			"strcmp",
			"DS_Hash_Map_Bucket_t",
			"=>",
			"([0-9]+)",
			"([0-9])+",
			"([0-9]*)",
			"conn->type",
			"NU_SERVER",
			"NU_Connection_create",
			", conn \\? NU_Connection_Type_to_string\\(conn->type\\) : \"NULL\"",
			", conn ? NU_Connection_Type_to_string(conn->type) : \"NULL\"",
			"\\|\\| conn->type != NU_SERVER",
			";Connection-Type: %s",
			"close\\(",
			"close(",
			"close",
			"NU_Bound_Socket_destroy",
			"set",
			"\\)[^(;)]",
			"\\)[^({;\\s)]",
			"\\)[^({;)]",
			"\\)[^({;) ,)]",
			"\\)[^{;) ]",
			"\\)[^{;) ,]",
			"\\{(.*[^}])*\\}",
			"\\{.*[^}])*\\}",
			"NU_server",
			"client",
			"NU_Client_t"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
			"substr",
			"str",
			"substr",
			"str",
			"String",
			"SU_String_t ",
			"SU_String_t",
			"String_t",
			"String ",
			"String",
			"SU_String",
			"MU_FLAG_GET",
			"__uint32_t",
			"max_size",
			"event_signal",
			"signal_event",
			"signaled",
			"event_lock",
			"",
			"(conn->logger",
			"",
			", conn->logger",
			"",
			"'",
			"MU_COND_RWLOCK_UNLOCK",
			"MU_COND_RWLOCK_WRLOCK",
			"MU_COND_RWLOCK_RDLOCK",
			"MU_COND_RWLOCK_DESTROY",
			"MU_COND_RWLOCK_INIT",
			"MU_COND_RWLOCK_UNLOCK",
			"MU_COND_RWLOCK_RDLOCK",
			"MU_COND_RWLOCK_WRLOCK",
			"MU_COND_RWLOCK_DESTROY",
			"MU_COND_RWLOCK_WRLOCK",
			"MU_COND_RWLOCK_RDLOCK",
			"MU_COND_RWLOCK_UNLOCK",
			"MU_COND_RWLOCK_DESTROY",
			"MU_COND_RWLOCK_WRLOCK",
			"MU_COND_RWLOCK_RDLOCK",
			"\"",
			"",
			"\"",
			"",
			"NULL",
			"\"",
			"",
			"'",
			"\"",
			"'",
			"\"",
			"'",
			"",
			"\"",
			"",
			"MU_LOGGER_STRINGIFY(__LINE__)",
			"MU_Arg_evaluate_boolean(arg)",
			"",
			"string_ptr, arg",
			"bool",
			"DS_Bucket_t",
			"=",
			"[$1]",
			"",
			"NU_Server",
			"server",
			"NU_Server_t",
			"MU_Cond_rwlock",
			"NU_Connection_t",
			"connections",
			"conn",
			"NU_Connection_t *",
			"conn",
			"connections",
			"NU_Connection_t **",
			"NU_Connection_t *connection",
			"Atomic",
			"(conn->lock, logger)",
			"NU_unlock_rwlock",
			"NU_Connection_t *",
			"conn",
			"NU_Connection_t **",
			"NU_Connection_t **connections",
			"NU_Connection_t *connection",
			"NU_Connection_t **",
			"NU_Connection_t **connections",
			"NU_Connection_t *connection",
			"1.0",
			"",
			"(errno)",
			"errno",
			"ip_addr",
			"bbuf",
			"ip_addr",
			"bbuf",
			"NU_Bounded_Buffer_t",
			"bbuf",
			"MU_Get_Timestamp",
			"client->sockfd",
			"logger",
			"MU_LOG_VERBOSE(logger, ",
			"\\nTesting:",
			"Testing: %s",
			"",
			"\\\"%s\\\"",
			"logger",
			"tp->logger",
			"logger",
			"int ",
			"int",
			"SU_MODIFY",
			"SU_IGNORE_CASE",
			"SU_NONE",
			"flags",
			"is_selected(flags"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 1,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "Net_Utils/Tests/NU_Server_Test_File_Downloader.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3175,
						"regions":
						{
						},
						"selection":
						[
							[
								1787,
								1787
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "Net_Utils/NU_Server.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 14982,
						"regions":
						{
						},
						"selection":
						[
							[
								11379,
								11379
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 5055.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "Net_Utils/NU_Client.h",
					"semi_transient": true,
					"settings":
					{
						"buffer_size": 1302,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "Net_Utils/NU_Connection.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 14965,
						"regions":
						{
						},
						"selection":
						[
							[
								311,
								311
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": -0.0,
						"translation.y": 1980.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "Net_Utils/NU_Connection.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2510,
						"regions":
						{
						},
						"selection":
						[
							[
								71,
								71
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C.tmLanguage",
							"tab_size": 3,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 135.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "Net_Utils/NU_Helper.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 734,
						"regions":
						{
						},
						"selection":
						[
							[
								677,
								677
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "Net_Utils/NU_Server.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4053,
						"regions":
						{
						},
						"selection":
						[
							[
								3383,
								3383
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C.tmLanguage",
							"tab_size": 3,
							"translate_tabs_to_spaces": true
						},
						"translation.x": -0.0,
						"translation.y": 825.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 23.0
	},
	"input":
	{
		"height": 31.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 157.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "Packages/Makefile/Make.sublime-build",
	"project": "C_Utils.sublime-project",
	"replace":
	{
		"height": 62.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 175.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
