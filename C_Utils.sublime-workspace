{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"request",
				"request_header_str"
			],
			[
				"buf",
				"buffer_size"
			],
			[
				"header",
				"header_str"
			],
			[
				"deli",
				"delimiter"
			],
			[
				"first",
				"first_line"
			],
			[
				"val",
				"value_size"
			],
			[
				"field",
				"field_size"
			],
			[
				"delim",
				"delim_size"
			],
			[
				"NU_HEader",
				"NU_Header_create"
			],
			[
				"NU_Header",
				"NU_Header_t"
			],
			[
				"NU_He",
				"NU_Header_t"
			],
			[
				"arr",
				"arr_size"
			],
			[
				"MU_COND_",
				"MU_COND_RWLOCK_UNLOCK"
			],
			[
				"max",
				"max_clients"
			],
			[
				"max_",
				"max_bsocks"
			],
			[
				"conn",
				"conn_pool_size"
			],
			[
				"MU_A",
				"MU_ARG_CHECK"
			],
			[
				"BUF",
				"buffer_size"
			],
			[
				"MU_",
				"MU_ARG_CHECK"
			],
			[
				"NU_Server",
				"NU_Server_File_Downloader"
			],
			[
				"value",
				"value_retrieved"
			],
			[
				"MU_Cond_rw",
				"MU_Cond_rwlock_unlock"
			],
			[
				"MU_Cond_rwlock",
				"MU_Cond_rwlock_unlock"
			],
			[
				"MU_Logger_Format",
				"MU_Logger_Format_Info_t"
			],
			[
				"MU_Arg",
				"MU_Arg_evaluate_boolean"
			],
			[
				"default",
				"default_f"
			],
			[
				"er",
				"error_f"
			],
			[
				"custom",
				"custom_level"
			],
			[
				"MU_Lo",
				"MU_Logger_Format_Info_t"
			],
			[
				"should",
				"should_copy"
			],
			[
				"MU_Logger",
				"MU_Logger_get_format"
			],
			[
				"MU_Logger_",
				"MU_Logger_Format_Tokens"
			],
			[
				"lvl",
				"lvl_fn"
			],
			[
				"MU_Logger_Form",
				"MU_Logger_Format_Info_t"
			],
			[
				"MU_L",
				"MU_Logger_Format_Info_t"
			],
			[
				"formatter",
				"formatter_orig_len"
			],
			[
				"token",
				"token_size"
			],
			[
				"__F",
				"__FUNCTION__"
			],
			[
				"MU_ARG",
				"MU_ARG_STRINGIFY"
			],
			[
				"str",
				"string_ptr"
			],
			[
				"MU_ARG_CH",
				"MU_ARG_CHECK_1"
			],
			[
				"arg",
				"arg_str"
			],
			[
				"__",
				"__VA_ARGS__"
			],
			[
				"crea",
				"create_bucket"
			],
			[
				"DS_Hash",
				"DS_Hash_Map_Test"
			],
			[
				"DS_Has",
				"DS_Hash_Map_destroy"
			],
			[
				"DS_hash_ma",
				"DS_Hash_Map_contains"
			],
			[
				"DS_hash_",
				"DS_Hash_Map_get"
			],
			[
				"DS_Hash_",
				"DS_Hash_Map_remove"
			],
			[
				"get_buc",
				"get_bucket_index"
			],
			[
				"get_value",
				"get_value_from_key"
			],
			[
				"clear",
				"clear_map"
			],
			[
				"DS_H",
				"DS_Hash_Map_t"
			],
			[
				"return",
				"return"
			],
			[
				"bucket",
				"bucket_is_valid"
			],
			[
				"buck",
				"bucket_is_valid"
			],
			[
				"get_",
				"get_bucket_index"
			],
			[
				"get",
				"get_value_from_key"
			],
			[
				"amount",
				"amount_of_buckets"
			],
			[
				"DS_",
				"DS_Hash_Map_add"
			],
			[
				"MU_Cond_",
				"MU_Cond_rwlock_destroy"
			],
			[
				"NU_BO",
				"NU_Bound_Socket_destroy"
			],
			[
				"NU_Bo",
				"NU_Bound_Socket_t"
			],
			[
				"NU_Bound",
				"NU_Bound_Socket_destroy"
			],
			[
				"NU_Bound_",
				"NU_Bound_Socket_t"
			],
			[
				"MU_Cond",
				"MU_Cond_rwlock_unlock"
			],
			[
				"setup",
				"setup_bound_socket"
			],
			[
				"is_",
				"is_threaded"
			],
			[
				"init",
				"init_locks"
			],
			[
				"NU_B",
				"NU_Bound_Socket_reuse"
			],
			[
				"pthread_",
				"pthread_rwlock_t"
			],
			[
				"MU_LO",
				"MU_Logger_t"
			],
			[
				"can_",
				"can_receive"
			],
			[
				"send_s",
				"send_set"
			],
			[
				"rece",
				"receive_set"
			],
			[
				"pthread",
				"pthread_join"
			],
			[
				"username_",
				"username_max_length"
			],
			[
				"username",
				"username_prefix_size"
			],
			[
				"server",
				"server_str"
			],
			[
				"ser",
				"server_str"
			],
			[
				"pt",
				"pthread_rwlock_t"
			],
			[
				"NU_rwl",
				"NU_rwlock_unlock"
			],
			[
				"NU_rwlock",
				"NU_rwlock_unlock"
			],
			[
				"is",
				"is_disconnected"
			],
			[
				"connection",
				"connections_allocated"
			],
			[
				"bsocks_",
				"bsocks_allocated"
			],
			[
				"amo",
				"amount_of_connections"
			],
			[
				"bsock_",
				"bsock_pool_size"
			],
			[
				"NU_Connection",
				"NU_Connection_create"
			],
			[
				"bsocks",
				"bsocks_allocated"
			],
			[
				"connect",
				"connections_allocated"
			],
			[
				"amount_",
				"amount_of_sockets"
			],
			[
				"data",
				"data"
			],
			[
				"NU_wr",
				"NU_rwlock_rdlock"
			],
			[
				"NU_rw",
				"NU_rwlock_unlock"
			],
			[
				"NU_Con",
				"NU_Connection_disconnect"
			],
			[
				"fully",
				"fully_shutdown"
			],
			[
				"NU_rwlo",
				"NU_rwlock_wrlock"
			],
			[
				"client",
				"client_str"
			],
			[
				"bytes",
				"bytes_sent"
			],
			[
				"mess",
				"messages_sent"
			],
			[
				"pthread_m",
				"pthread_mutex_lock"
			],
			[
				"NU_Lo",
				"NU_lock_rdlock"
			],
			[
				"NU_lock",
				"NU_lock_rdlock"
			],
			[
				"MU",
				"MU_Logger_t"
			],
			[
				"buffer",
				"buffer"
			],
			[
				"NU_loc",
				"NU_unlock_rdlock"
			],
			[
				"buf_size",
				"buf_size"
			],
			[
				"pthr",
				"pthread_mutex_t"
			],
			[
				"NU_Conn",
				"NU_Connection_is_valid"
			],
			[
				"ready",
				"ready_connections"
			],
			[
				"NU_Connection_rece",
				"NU_Connection_receive_to_file"
			],
			[
				"N",
				"NU_Connect_t"
			],
			[
				"NU_Connec",
				"NU_Connection_t"
			],
			[
				"MU_T",
				"MU_TIMER_H"
			],
			[
				"bytes_",
				"bytes_received"
			],
			[
				"amou",
				"amount_of_sockets"
			],
			[
				"delete_",
				"delete_all_sockets"
			],
			[
				"curr",
				"curr_client"
			],
			[
				"clients",
				"clients_str"
			],
			[
				"ip",
				"ip_address"
			],
			[
				"tmp_",
				"tmp_bsock"
			],
			[
				"port",
				"port"
			],
			[
				"reuse",
				"reuse_existing_socket"
			],
			[
				"MU_LOG_",
				"MU_LOG_BSOCK_ERR"
			],
			[
				"destr",
				"destroy_bound_socket"
			],
			[
				"int",
				"int"
			],
			[
				"NU_Client",
				"NU_Client_Socket_t"
			]
		]
	},
	"buffers":
	[
		{
			"file": "Net_Utils/Misc/NU_HTTP_Header_Test.mk",
			"settings":
			{
				"buffer_size": 730,
				"line_ending": "Windows",
				"name": "CC=gcc"
			}
		},
		{
			"file": "Net_Utils/NU_HTTP.h",
			"settings":
			{
				"buffer_size": 1368,
				"line_ending": "Windows"
			}
		},
		{
			"file": "Net_Utils/Tests/NU_HTTP_Header_Test.c",
			"settings":
			{
				"buffer_size": 2892,
				"line_ending": "Windows"
			}
		},
		{
			"file": "Net_Utils/NU_HTTP.c",
			"settings":
			{
				"buffer_size": 6623,
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "Packages/Makefile/Make.sublime-build",
	"build_system_choices":
	[
		[
			[
				[
					"Packages/C++/C++ Single File.sublime-build",
					""
				],
				[
					"Packages/C++/C++ Single File.sublime-build",
					"Run"
				]
			],
			[
				"Packages/C++/C++ Single File.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/C++/C++ Single File.sublime-build",
					""
				],
				[
					"Packages/C++/C++ Single File.sublime-build",
					"Run"
				],
				[
					"Packages/Makefile/Make.sublime-build",
					""
				],
				[
					"Packages/Makefile/Make.sublime-build",
					"Clean"
				],
				[
					"Packages/User/Make_C.sublime-build",
					""
				]
			],
			[
				"Packages/Makefile/Make.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/C++/C++ Single File.sublime-build",
					""
				],
				[
					"Packages/C++/C++ Single File.sublime-build",
					"Run"
				],
				[
					"Packages/User/Make_C.sublime-build",
					""
				]
			],
			[
				"Packages/User/Make_C.sublime-build",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 58.0,
		"last_filter": "make depe",
		"selected_items":
		[
			[
				"make depe",
				"Makefile (C_Utils): make depend"
			],
			[
				"make clean",
				"Build With: Make - Clean"
			],
			[
				"make depend",
				"Makefile (C_Utils): make depend"
			],
			[
				"make",
				"Makefile (C_Utils): make all"
			],
			[
				"make ",
				"Makefile (C_Utils): make depend"
			],
			[
				"git push",
				"Git: Push"
			],
			[
				"git commit",
				"Git: Commit"
			],
			[
				"git add",
				"Git: Add..."
			],
			[
				"git commt",
				"Git: Commit"
			],
			[
				"git",
				"Git: Add..."
			],
			[
				"git status",
				"Git: Status"
			],
			[
				"make clea",
				"Build With: Make - Clean"
			],
			[
				"make cl",
				"Build With: Make - Clean"
			],
			[
				"pack",
				"Package Control: Install Package"
			],
			[
				"lint",
				"SublimeLinter: Toggle Linter"
			],
			[
				"package",
				"Package Control: Install Package"
			],
			[
				"Package",
				"Package Control: Remove Package"
			],
			[
				"Package Control: ",
				"Package Control: List Packages"
			],
			[
				"package ",
				"Package Control: Install Package"
			],
			[
				"Run",
				"Run"
			],
			[
				"run",
				"Run"
			],
			[
				"status",
				"Git: Status"
			],
			[
				"Make_C",
				"Build With: Make_C"
			],
			[
				"Package Control",
				"Package Control: List Packages"
			],
			[
				"Package Control: C",
				"Package Control: Add Channel"
			],
			[
				"Pack",
				"Preferences: Browse Packages"
			]
		],
		"width": 416.0
	},
	"console":
	{
		"height": 126.0,
		"history":
		[
			"asda",
			"view.run_command('EventDump')",
			"view.run_command('my_app')",
			"view.run_command('myapp')",
			"view.run_command('my_app')",
			"view.run_command('myapp')",
			"view.run_command('example')",
			"import urllib.request,os,hashlib; h = 'eb2297e1a458f27d836c04bb0cbaf282' + 'd0e7a3098092775ccb37ca9d6b2e4b7d'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by) "
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/C/Users/theif519/Documents/GitHub/C_Utils",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Data_Structures",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Data_Structures/Misc",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Misc_Utils",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Net_Utils",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Net_Utils/Misc",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Net_Utils/Tests"
	],
	"file_history":
	[
		"/C/Users/theif519/Documents/GitHub/C_Utils/Data_Structures/Misc/DS_Hash_Map_Test.mk",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Data_Structures/DS_Helpers.h",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Data_Structures/DS_Hash_Map.c",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Data_Structures/DS_Hash_Map.h",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Data_Structures/DS_Hash_Map_Test.c",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Net_Utils/NU_Connection.c",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Net_Utils/Tests/NU_Server_Test_File_Downloader.c",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Net_Utils/NU_Server.c",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Net_Utils/NU_Client.c",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Net_Utils/Misc/NU_Server_File_Downloader.mk",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Net_Utils/Misc/NU_Server_Telnet_Client_Chat.mk",
		"/C/Users/theif519/Documents/GitHub/C_Utils/NU_Server.log",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Misc_Utils/MU_Cond_Locks.h",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Misc_Utils/MU_Cond_Locks.c",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Net_Utils/NU_Client.h",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Net_Utils/Tests/NU_Client_Test_File_Downloader.c",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Net_Utils/Tests/NU_Server_Test_Client_Chat.c",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Net_Utils/Misc/NU_Server_Telnet_Client_Char.mk",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Misc_Utils/MU_Arg_Check.h",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Misc_Utils/MU_Logger.h",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Net_Utils/NU_Server.h",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Net_Utils/NU_Helper.h",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Misc_Utils/MU_Retry.h",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Data_Structures/Misc/DS_Hash_Map.mk",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Net_Utils/NU_Connection.h",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Net_Utils/NU_Helper.c",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Net_Utils/NU_Server_File_Downloader.mk",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Net_Utils/NU_HTTP.h",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Misc_Utils/MU_Logger.c",
		"/C/Users/theif519/Documents/GitHub/C_Utils/C_Utils.sublime-project",
		"/C/Users/theif519/Documents/GitHub/C_Utils/DS_Hash_Map_Test.log",
		"/C/Users/theif519/Documents/GitHub/C_Utils/DS_Hash_Map.log",
		"/C/Users/theif519/Documents/GitHub/C_Utils/DS_Hash_Map_Test.exe.stackdump",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Misc_Utils/MU_Arg_Check.c",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Makefile",
		"/C/cygwin64/home/theif519/DrMemory-Linux-1.8.0-8/README",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Net_Utils/makefile",
		"/C/Users/theif519/Documents/GitHub/C_Utils/COMMIT_EDITMSG.COMMIT_EDITMSG",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Misc_Utils/COMMIT_EDITMSG.COMMIT_EDITMSG",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Data_Structures/Linked_List.c",
		"/C/Users/theif519/AppData/Roaming/Sublime Text 3/Packages/SublimeLinter-contrib-clang/README.md",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Data_Structures/DS_Hash_Map.sublime-project",
		"/C/Users/theif519/AppData/Roaming/Sublime Text 3/Packages/SublimeLinter/SublimeLinter.sublime-settings",
		"/C/Users/theif519/AppData/Roaming/Sublime Text 3/Packages/SublimeLinter/Default (Windows).sublime-keymap",
		"/C/Users/theif519/AppData/Roaming/Sublime Text 3/Packages/Prefixr/My_First_Plugin.py",
		"/C/Users/theif519/AppData/Roaming/Sublime Text 3/Packages/User/Default (Windows).sublime-keymap",
		"/C/Users/theif519/Documents/GitHub/C_Utils/make.sh",
		"/C/Users/theif519/AppData/Roaming/Sublime Text 3/Packages/User/C_Make.sublime-build",
		"/C/Users/theif519/AppData/Roaming/Sublime Text 3/Packages/User/C_Build.sublime-build",
		"/C/Users/theif519/AppData/Roaming/Sublime Text 3/Packages/User/Make_C.sublime-build",
		"/C/Users/theif519/AppData/Roaming/Sublime Text 3/Packages/User/MakeCommand.sublime-commands",
		"/C/Users/theif519/AppData/Roaming/Sublime Text 3/Packages/Git/Git.sublime-settings",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Data_Structures/Hash_Map/DS_Hash_Map_Test.c",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Data_Structures/Hash_Map/DS_Hash_Map.c",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Data_Structures/Hash_Map/DS_Hash_Map.h",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Misc_Utils/MU_Allocators.c",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Misc_Utils/MU_Allocators.h",
		"/C/Users/theif519/AppData/Local/Temp/Rar$DIa0.502/http.c",
		"/C/Users/theif519/AppData/Local/Temp/Rar$DRa0.099/kore/includes/http.h",
		"/C/Users/theif519/AppData/Local/Temp/Rar$DIa0.256/net.c",
		"/C/Users/theif519/AppData/Local/Temp/Rar$DIa0.956/timer.c",
		"/C/Users/theif519/AppData/Local/Temp/Rar$DIa0.097/worker.c",
		"/C/Users/theif519/AppData/Local/Temp/Rar$DIa0.922/zlib_dict.c",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Net_Utils/Ideas.md",
		"/C/Users/theif519/Documents/GitHub/C_Utils/README.md",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Net_Utils/NU_Server_Test_File_Downloader.c",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Misc_Utils/MU_Timer.c",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Misc_Utils/MU_Timer.h",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Misc_Utils/MU_Atomic.h",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Misc_Utils/Misc_Utils.c",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Misc_Utils/Misc_Utils.h",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Misc_Utils/MU_Helper.h",
		"/C/Users/theif519/Documents/GitHub/C_Utils/String_Utils/Code/String_Utils.c",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Development/Net_Utils/NU_Helper.h",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Development/Net_Utils/NU_Helper.c",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Development/Net_Utils/NU_Server.c",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Development/NU_Server_Log.txt",
		"/C/Program Files (x86)/Pithos/pithos.bat",
		"/C/Program Files (x86)/Pithos/pithos.txt",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Development/Net_Utils/NU_Server_Test.c",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Development/Net_Utils/NU_Server.h",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Development/Misc_Utils/Code/Misc_Utils.h",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Development/Net_Utils/Code/NU_Server.h",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Development/Net_Utils/Code/NU_Client.c",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Development/Net_Utils/Code/Net_Utils.h",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Development/Net_Utils/Code/NU_Server.c",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Development/Net_Utils/Code/NU_Client.h",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Development/Misc_Utils/Code/Misc_Utils.c",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Development/Net_Utils/Code/NU_HTTP.c",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Development/Net_Utils/Code/NU_HTTP.h",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Development/Net_Utils/Code/Net_Utils_Helper_Functions.h",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Development/Net_Utils/Code/Net_Utils.c",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Stable/Misc_Utils/Code/Misc_Utils.h",
		"/C/Users/theif519/Documents/Regex Exercises/ex2.txt",
		"/C/Users/theif519/Documents/Regex Exercises/ex2.regex",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Stable/String_Utils/Tests/String_Utils_Test_Log.txt",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Development/Thread_Pool/Code/Thread_Pool.c",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Stable/Thread Pool/Code/Thread_Pool.h",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Development/Thread_Pool/Makefile",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Stable/Data_Structures/PBQueue/Makefile",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Stable/Data_Structures/PBQueue/Test/PBQueue_Test.c",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Stable/Thread Pool/Code/Thread_Pool.c",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Stable/String_Utils/Code/String_Utils.c",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Stable/String_Utils/Tests/String_Utils_Tests.c",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Stable/String_Utils/Code/String_Utils.h",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Development/Data_Structures/Linked_List/Linked_List.c",
		"/C/Users/theif519/Documents/GitHub/theif519.github.io/index.html",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Stable/Data_Structures/Linked_List/Linked_List.dox",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Stable/Data_Structures/Linked_List/String_Utils.dox",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Development/Data_Structures/Linked_List/Makefile",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Stable/Data_Structures/Linked List/Linked_List.c",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Development/Misc_Utils/Misc_Utils.h",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Development/Misc_Utils/Misc_Utils.c",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Development/Linked_List_Test_Log.txt",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Development/Linked_List_Log.txt",
		"/C/Users/theif519/Documents/GitHub/BlackJack-In-C/BJStructs.c",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Development/Misc_Utils/Misc_Utils_Test.c",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Development/Thread_Pool/Code/Thread_Pool.h",
		"/C/ProgramData/Microsoft/Windows/Start Menu/Programs/Opera.lnk",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Stable/String_Utils/Code/PBQueue.dox",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Development/String_Utils/Code/String_Utils_Tests.c",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Stable/Misc_Utils/Code/String_Utils.dox",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Stable/Misc_Utils/Tests/Misc_Utils_Test_Log.txt",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Development/String_Utils_Test_Log.txt",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Development/String_Utils/Code/String_Utils.c",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Development/String_Utils/Code/String_Utils.h",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Development/Thread_Pool_Log.txt",
		"/C/Users/theif519/Documents/GitHub/C_Utils/Development/Thread_Pool_Test_Log.txt"
	],
	"find":
	{
		"height": 34.0
	},
	"find_in_files":
	{
		"height": 90.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"			\n",
			"\\\\n",
			"\\\\\"",
			"MU_Cond_rwlock_unlock",
			"MU_Cond_rwlock_wrlock",
			"MU_Cond_rwlock_rdlock",
			"MU_Cond_rwlock_destroy",
			"MU_Cond_rwlock_init",
			"MU_Cond_rwlock_unlock",
			"MU_Cond_rwlock_rdlock",
			"MU_Cond_rwlock_wrlock",
			"MU_Cond_rwlock_destroy",
			"MU_Cond_rwlock_wrlock",
			"MU_Cond_rwlock_rdlock",
			"MU_Cond_rwlock_unlock",
			"MU_Cond_rwlock_destroy",
			"MU_Cond_rwlock_wrlock",
			"MU_Cond_rwlock_rdlock",
			"(^\\\\r)\\\\n\"",
			"\\\\n\"",
			"\\\\\"",
			"MU_Cond_rwlock_de",
			"\".*->",
			"\"NU_Client_destroy->",
			"\".*->",
			" != NULL",
			"!= NULL",
			" != NULL",
			"!= NULL",
			"\\(\\(void \\*\\)0\\)",
			"((void *)0)",
			"'\\n\"",
			"'\\\\n\"",
			"\\\\n",
			"\\\\\"",
			"\"NU_.*->",
			"\".*->",
			"\"NU_Server_destroy->",
			"\".*->",
			"\\\\\"",
			"\\\\n\"",
			"\\\\\"",
			"\\\\n",
			"MU_TEMP_",
			"'",
			"\\\\n",
			"\\n",
			"\\\\n",
			"MU_logger_Log",
			"assertion",
			"__LINE__",
			"MU_ARG_EVAL\\(arg\\)",
			"!= false\\)",
			"arg, string_ptr",
			"_Bool",
			"strcmp",
			"DS_Hash_Map_Bucket_t",
			"=>",
			"([0-9]+)",
			"([0-9])+",
			"([0-9]*)",
			"conn->type",
			"NU_SERVER",
			"NU_Connection_create",
			", conn \\? NU_Connection_Type_to_string\\(conn->type\\) : \"NULL\"",
			", conn ? NU_Connection_Type_to_string(conn->type) : \"NULL\"",
			"\\|\\| conn->type != NU_SERVER",
			";Connection-Type: %s",
			"close\\(",
			"close(",
			"close",
			"NU_Bound_Socket_destroy",
			"set",
			"\\)[^(;)]",
			"\\)[^({;\\s)]",
			"\\)[^({;)]",
			"\\)[^({;) ,)]",
			"\\)[^{;) ]",
			"\\)[^{;) ,]",
			"\\{(.*[^}])*\\}",
			"\\{.*[^}])*\\}",
			"NU_server",
			"client",
			"NU_Client_t",
			"NU_rwlock",
			"NU_Client_Socket_t",
			"clients",
			"client",
			"NU_Client_Socket_t \\*",
			"connection",
			"clients",
			"NU_Client_Socket_t \\*\\*",
			"NU_Client_Socket_t \\*client",
			"Collective",
			"client",
			"\\(conn->lock\\)",
			"NU_unlock_..lock",
			"NU_Connection.h",
			";\n",
			"NU_Server_Socket_t \\*",
			"NU_Server_Socket_t /*",
			"connection",
			"NU_Server_Socket_t \\*\\*",
			"NU_Server_Socket_t \\*\\*servers",
			"NU_Server_Socket_t \\*server",
			"NU_Server_Socket_t \\*\\*",
			"NU_Server_Socket_t \\*\\*server",
			"NU_Server_Socket_t \\*server",
			"NUH_get_socket",
			"result",
			"results",
			"0.10",
			"TEMP_FAILURE_RETRY\\(",
			"[{].*[}]",
			".*\\{.*\\}",
			"timed_accept",
			"[^_](send|recv|accept|select)\\(.*\\)",
			"[^_](send|recv|accept)\\(.*\\)",
			"[^_]recv\\(.*\\)",
			"[^_]send\\(.*\\)",
			"[^_(]send\\(.*\\)",
			"[^\\s].*send\\(.*\\)",
			"send",
			"\\(-1\\)",
			"(-1)",
			"-1",
			"ip_address",
			"destroy_bound"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
			"",
			"'",
			"MU_COND_RWLOCK_UNLOCK",
			"MU_COND_RWLOCK_WRLOCK",
			"MU_COND_RWLOCK_RDLOCK",
			"MU_COND_RWLOCK_DESTROY",
			"MU_COND_RWLOCK_INIT",
			"MU_COND_RWLOCK_UNLOCK",
			"MU_COND_RWLOCK_RDLOCK",
			"MU_COND_RWLOCK_WRLOCK",
			"MU_COND_RWLOCK_DESTROY",
			"MU_COND_RWLOCK_WRLOCK",
			"MU_COND_RWLOCK_RDLOCK",
			"MU_COND_RWLOCK_UNLOCK",
			"MU_COND_RWLOCK_DESTROY",
			"MU_COND_RWLOCK_WRLOCK",
			"MU_COND_RWLOCK_RDLOCK",
			"\"",
			"",
			"\"",
			"",
			"NULL",
			"\"",
			"",
			"'",
			"\"",
			"'",
			"\"",
			"'",
			"",
			"\"",
			"",
			"MU_LOGGER_STRINGIFY(__LINE__)",
			"MU_Arg_evaluate_boolean(arg)",
			"",
			"string_ptr, arg",
			"bool",
			"DS_Bucket_t",
			"=",
			"[$1]",
			"",
			"NU_Server",
			"server",
			"NU_Server_t",
			"MU_Cond_rwlock",
			"NU_Connection_t",
			"connections",
			"conn",
			"NU_Connection_t *",
			"conn",
			"connections",
			"NU_Connection_t **",
			"NU_Connection_t *connection",
			"Atomic",
			"(conn->lock, logger)",
			"NU_unlock_rwlock",
			"NU_Connection_t *",
			"conn",
			"NU_Connection_t **",
			"NU_Connection_t **connections",
			"NU_Connection_t *connection",
			"NU_Connection_t **",
			"NU_Connection_t **connections",
			"NU_Connection_t *connection",
			"1.0",
			"",
			"(errno)",
			"errno",
			"ip_addr",
			"bbuf",
			"ip_addr",
			"bbuf",
			"NU_Bounded_Buffer_t",
			"bbuf",
			"MU_Get_Timestamp",
			"client->sockfd",
			"logger",
			"MU_LOG_VERBOSE(logger, ",
			"\\nTesting:",
			"Testing: %s",
			"",
			"\\\"%s\\\"",
			"logger",
			"tp->logger",
			"logger",
			"int ",
			"int",
			"SU_MODIFY",
			"SU_IGNORE_CASE",
			"SU_NONE",
			"flags",
			"is_selected(flags"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 3,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "Net_Utils/Misc/NU_HTTP_Header_Test.mk",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 730,
						"regions":
						{
						},
						"selection":
						[
							[
								466,
								466
							]
						],
						"settings":
						{
							"auto_name": "CC=gcc",
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "Net_Utils/NU_HTTP.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1368,
						"regions":
						{
						},
						"selection":
						[
							[
								125,
								125
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "Net_Utils/Tests/NU_HTTP_Header_Test.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2892,
						"regions":
						{
						},
						"selection":
						[
							[
								1653,
								1653
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 225.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "Net_Utils/NU_HTTP.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6623,
						"regions":
						{
						},
						"selection":
						[
							[
								2364,
								2364
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 1035.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 23.0
	},
	"input":
	{
		"height": 31.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 157.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "Packages/Makefile/Make.sublime-build",
	"project": "C_Utils.sublime-project",
	"replace":
	{
		"height": 62.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 175.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
